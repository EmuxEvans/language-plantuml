'fileTypes': [
  'puml'
  'plantuml'
  'txt'
]
'firstLineMatch': '^\\s*@startuml'
'name': 'PlantUML'
'scopeName': 'source.plantuml'
'patterns': [
  {
    'name': 'meta.source.block.plantuml'
    'begin': '^\\s*(@startuml)(?:\\s+(.*))\\s*$'
    'beginCaptures':
      '1':
        'name': 'constant.plantuml'
      '2':
        'name': 'string.other.link.plantuml'
    'contentName': 'source.plantuml'
    'end': '^\\s*@enduml'
    'endCaptures':
      '0':
        'name': 'constant.plantuml'
    'patterns': [
      {
        'include': '#plantuml'
      }
    ]
  }
]
'repository':
  'common':
    'patterns': [
      {
        'include': '#comments'
      }
      {
        'include': '#preprocessor'
      }
      {
        'name': 'meta.pragma.plantuml'
        'match': '^\\s*(!pragma)\\s+(\\S+)\\s+(.*)$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'constant.plantuml'
          '3':
            'name': 'string.plantuml'
      }
      {
        'name': 'meta.scale.plantuml'
        'match': '^\\s*(scale)\\s+(max\\s+)?(?:((?:(?:[1-9][0-9]*)|\\d+(?:\\.\\d+)?))(?:(/)((?:(?:[1-9][0-9]*)|\\d+(?:\\.\\d+)?)))?(?:\\s+(width|height))?|((?:(?:[1-9][0-9]*)|\\d+(?:\\.\\d+)?))(\\*)((?:(?:[1-9][0-9]*)|\\d+(?:\\.\\d+)?)))\\s*$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'keyword.control.plantuml'
          '3':
            'name': 'constant.numeric.plantuml'
          '4':
            'name': 'punctuation.plantuml'
          '5':
            'name': 'constant.numeric.plantuml'
          '6':
            'name': 'keyword.control.plantuml'
          '7':
            'name': 'constant.numeric.plantuml'
          '8':
            'name': 'punctuation.plantuml'
          '9':
            'name': 'constant.numeric.plantuml'
      }
      {
        'name': 'meta.skinparam.plantuml'
        'match': '^\\s*(skinparam)\\s+(\\S+)\\s+(.*)$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'entity.name.tag.plantuml'
          '3':
            'name': 'constant.other.plantuml'
      }
      {
        'name': 'meta.title.line.plantuml'
        'match': '^\\s*(title)\\s+(\\S.*)$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'string.plantuml'
      }
      {
        'name': 'meta.title.block.plantuml'
        'begin': '^\\s*(title)\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'end': '^\\s*(end\\s*title)\\s*$'
        'endCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'contentName': 'string.plantuml'
      }
      {
        'name': 'meta.header.line.plantuml'
        'match': '^\\s*(?:(center|left|right)\\s+)?(header|footer)\\s+(\\S.*)$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'keyword.control.plantuml'
          '3':
            'name': 'string.plantuml'
      }
      {
        'name': 'meta.header.block.plantuml'
        'begin': '^\\s*(?:(center|left|right)\\s+)?(header|footer)\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'keyword.control.plantuml'
        'end': '^\\s*(end\\s*\\2)\\s*$'
        'endCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'contentName': 'string.plantuml'
      }
      {
        'name': 'meta.legend.block.plantuml'
        'begin': '^\\s*(legend)(?:\\s+(left|right|center))?\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'constant.numeric.plantuml'
        'end': '^\\s*(end\\s*legend)\\s*$'
        'endCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'contentName': 'string.plantuml'
      }
      {
        'name': 'meta.newpage.plantuml'
        'match': '^\\s*(newpage)(?:\\s+(.*)?)\\s*$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'string.plantuml'
      }
      {
        'name': 'meta.note.block.plantuml'
        'begin': '^\\s*([hr]?note)\\s*(?:\\s+((?:left|right)(?:\\s+of)?|over)(?:\\s+((?:[\\w\\u0080-\\uFFFF]+|"[^"]+")(?:\\s*,\\s*(?:[\\w\\u0080-\\uFFFF]+|"[^"]+"))*))?(?:\\s+(\\#\\w+))?)?\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'constant.numeric.plantuml'
          '3':
            'name': 'meta.class.plantuml'
          '4':
            'name': 'constant.other.color.plantuml'
        'end': '^\\s*(end\\s*\\1)\\s*$'
        'endCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'contentName': 'string.plantuml'
      }
      {
        'name': 'meta.note.line.plantuml'
        'match': '^\\s*([hr]?note)\\s*(?:\\s+((?:left|right)(?:\\s+of)?|over)(?:\\s+((?:[\\w\\u0080-\\uFFFF]+|"[^"]+")(?:\\s*,\\s*(?:[\\w\\u0080-\\uFFFF]+|"[^"]+"))*))?(?:\\s+(\\#\\w+))?)?\\s*(:)\\s*(\\S.*)\\s*$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'constant.plantuml'
          '3':
            'name': 'meta.class.plantuml'
          '4':
            'name': 'constant.other.color.plantuml'
          '5':
            'name': 'punctuation.plantuml'
          '6':
            'name': 'string.plantuml'
      }
      {
        'name': 'meta.note.floating.plantuml'
        'match': '^([hr]?note)\\s+("[^"]+")\\s+(as)\\s+([\\w\\u0080-\\uFFFF]+)\\s*$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'string.plantuml'
          '3':
            'name': 'keyword.control.plantuml'
          '4':
            'name': 'meta.class.plantuml'
      }
    ]
  'plantuml':
    'patterns': [
      {
        'include': '#common'
      }
      {
        'include': '#sequence_diagram'
      }
      {
        'include': '#usecase_diagram'
      }
      {
        'include': '#class_diagram'
      }
      {
        'include': '#activity_diagram'
      }
      {
        'include': '#component_diagram'
      }
      {
        'include': '#state_diagram_start'
      }
      {
        'include': '#object_diagram'
      }
    ]
  'comments':
    'patterns': [
      {
        'begin': '(^[ \\t]+)?(?=\\\')'
        'beginCaptures':
          '1':
            'name': 'punctuation.whitespace.comment.leading.plantuml'
        'end': '(?!\\G)'
        'patterns': [
          {
            'name': 'comment.line.singlequote.plantuml'
            'begin': '\''
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.comment.plantuml'
            'end': '\\n'
          }
        ]
      }
      {
        'name': 'comment.block.plantuml'
        'begin': '/\''
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.comment.begin.plantuml'
        'end': '\'/'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.comment.end.plantuml'
      }
    ]
  'sequence_diagram':
    'patterns': [
      {
        'name': 'meta.sequence.divider.plantuml'
        'match': '^\\s*(==+)\\s*([^=]+)\\s*(==+)\\s*$'
        'captures':
          '1':
            'name': 'punctuation.plantuml'
          '2':
            'name': 'string.plantuml'
          '3':
            'name': 'punctuation.plantuml'
      }
      {
        'name': 'meta.sequence.delay.plantuml'
        'match': '^\\s*(\\.{3})\\s*(.*)\\s*(\\.{3})\\s*$'
        'captures':
          '1':
            'name': 'punctuation.plantuml'
          '2':
            'name': 'string.plantuml'
          '3':
            'name': 'punctuation.plantuml'
      }
      {
        'name': 'meta.autonumber.plantuml'
        'match': '^\\s*(autonumber)\\s+(?:(\\d+)|("[^"]+"))?\\s+(?:(\\d+)|("[^"]+"))?\\s+(?:("[^"]+"))?\\s*$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'constant.numeric.plantuml'
          '3':
            'name': 'string.double.plantuml'
          '4':
            'name': 'constant.numeric.plantuml'
          '5':
            'name': 'string.double.plantuml'
          '6':
            'name': 'string.double.plantuml'
      }
      {
        'name': 'meta.sequence.ref.line.plantuml'
        'match': '^\\s*(ref\\s+over)\\s+((?:[\\w\\u0080-\\uFFFF]+|"[^"]+")(?:\\s*,\\s*(?:[\\w\\u0080-\\uFFFF]+|"[^"]+"))*)\\s*(:)\\s*(.*)\\s*$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'meta.class.plantuml'
          '3':
            'name': 'punctuation.plantuml'
          '4':
            'name': 'string.plantuml'
      }
      {
        'name': 'meta.sequence.ref.block.plantuml'
        'begin': '^\\s*(ref\\s+over)\\s+((?:[\\w\\u0080-\\uFFFF]+|"[^"]+")(?:\\s*(,)\\s*(?:[\\w\\u0080-\\uFFFF]+|"[^"]+"))*)\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'meta.class.plantuml'
          '3':
            'name': 'punctuation.plantuml'
        'end': '^\\s*(end(?:\\s*ref)?)\\s*$'
        'endCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'contentName': 'string.plantuml'
      }
      {
        'name': 'meta.sequence.alt.plantuml'
        'begin': '^\\s*(alt|par)(?:\\s+(.*))?\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'string.plantuml'
        'end': '^\\s*(end)\\s*$'
        'endCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'patterns': [
          {
            'match': '^\\s*(else)(?:\\s+(.*))?\\s*$'
            'captures':
              '1':
                'name': 'keyword.control.plantuml'
              '2':
                'name': 'string.plantuml'
          }
          {
            'include': '#plantuml'
          }
        ]
      }
      {
        'name': 'meta.sequence.box.plantuml'
        'begin': '^\\s*(box)\\s+(.*)\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'string.plantuml'
        'end': '^\\s*(end\\s*box)\\s*$'
        'endCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'patterns': [
          {
            'include': '#plantuml'
          }
        ]
      }
      {
        'name': 'meta.sequence.loop.plantuml'
        'begin': '^\\s*(loop)(?:\\s+(.*)\\s+(times))?\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'constant.numeric.plantuml'
          '3':
            'name': 'keyword.control.plantuml'
        'end': '^\\s*(end(?:\\s*loop)?)\\s*$'
        'endCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'patterns': [
          {
            'include': '#plantuml'
          }
        ]
      }
      {
        'name': 'meta.sequence.groupalt.plantuml'
        'begin': '^\\s*(opt|loop|break|critical)(?:\\s+(.*))?\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'string.plantuml'
        'end': '^\\s*(end(?:\\s+\\1)?)\\s*$'
        'endCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'patterns': [
          {
            'include': '#plantuml'
          }
        ]
      }
      {
        'name': 'meta.sequence.group.plantuml'
        'begin': '^\\s*(group)\\s+(.*)\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'string.plantuml'
        'end': '^\\s*(end(?:\\s+\\1)?)\\s*$'
        'endCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'patterns': [
          {
            'include': '#plantuml'
          }
        ]
      }
      {
        'name': 'meta.sequence.declaring.plantuml'
        'match': '^\\s*(create(?:\\s+(?:actor|boundary|control|entity|database|participant))?|(?:actor|boundary|control|entity|database|participant))\\s+(?:((?:[\\w\\u0080-\\uFFFF]+|"[^"]+"))\\s+(as)\\s+)?((?:[\\w\\u0080-\\uFFFF]+|"[^"]+"))(?:\\s+(<<)\\s*(?:\\((.),(\\#\\w+)\\))?(.*)\\s*(>>))?(?:\\s+(\\#\\w+))?\\s*$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'meta.class.plantuml'
          '3':
            'name': 'keyword.control.plantuml'
          '4':
            'name': 'meta.class.plantuml'
          '5':
            'name': 'punctuation.plantuml'
          '6':
            'name': 'constant.character.plantuml'
          '7':
            'name': 'constant.other.color.plantuml'
          '8':
            'name': 'string.other.stereotype.plantuml'
          '9':
            'name': 'punctuation.plantuml'
          '10':
            'name': 'constant.other.color.plantuml'
      }
      {
        'name': 'meta.sequence.activate.plantuml'
        'match': '^\\s*(activate)\\s+((?:[\\w\\u0080-\\uFFFF]+|"[^"]+"))(?:\\s+(\\#\\w+))?\\s*$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'meta.class.plantuml'
          '3':
            'name': 'constant.other.color.plantuml'
      }
      {
        'name': 'meta.sequence.deactivate.plantuml'
        'match': '^\\s*(deactivate|destroy)\\s+(.*)\\s*$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'meta.class.plantuml'
      }
      {
        'name': 'meta.sequence.arrow.incoming.plantuml'
        'match': '^\\s*(\\[)([ox]?(?:<<?|\\\\\\\\?|//?)?-(?:\\[(\\#\\w+)\\])?-?(?:>>?|\\\\\\\\?|//?)?(?:[ox](?=[\\s\\]"]))?)\\s*((?:[\\w\\u0080-\\uFFFF]+|"[^"]+"))(?:\\s+(as)\\s+((?:[\\w\\u0080-\\uFFFF]+|"[^"]+")))?\\s*(:)\\s*(.*)$'
        'patterns': [
          {
            'include': 'sequence_arrow'
          }
        ]
        'captures':
          '1':
            'name': 'entity.name.function.plantuml'
          '2':
            'name': 'entity.name.function.plantuml'
          '3':
            'name': 'constant.other.color.plantuml'
          '4':
            'name': 'meta.class.plantuml'
          '5':
            'name': 'keyword.control.plantuml'
          '6':
            'name': 'meta.class.plantuml'
          '7':
            'name': 'punctuation.plantuml'
          '8':
            'name': 'string.plantuml'
      }
      {
        'name': 'meta.sequence.arrow.outgoing.plantuml'
        'match': '^\\s*((?:[\\w\\u0080-\\uFFFF]+|"[^"]+"))\\s*([ox]?(?:<<?|\\\\\\\\?|//?)?-(?:\\[(\\#\\w+)\\])?-?(?:>>?|\\\\\\\\?|//?)?(?:[ox](?=[\\s\\]"]))?)(\\])\\s*(:)\\s*(.*)$'
        'captures':
          '1':
            'name': 'meta.class.plantuml'
          '2':
            'name': 'entity.name.function.plantuml'
          '3':
            'name': 'constant.other.color.plantuml'
          '4':
            'name': 'entity.name.function.plantuml'
          '5':
            'name': 'punctuation.plantuml'
          '6':
            'name': 'string.plantuml'
      }
      {
        'name': 'meta.sequence.arrow.plantuml'
        'match': '^\\s*((?:[\\w\\u0080-\\uFFFF]+|"[^"]+"))\\s*([ox]?(?:<<?|\\\\\\\\?|//?)?-(?:\\[(\\#\\w+)\\])?-?(?:>>?|\\\\\\\\?|//?)?(?:[ox](?=[\\s\\]"]))?)\\s*((?:[\\w\\u0080-\\uFFFF]+|"[^"]+"))(?:\\s+(as)\\s+((?:[\\w\\u0080-\\uFFFF]+|"[^"]+")))?\\s*(:)\\s*(.*)$'
        'captures':
          '1':
            'name': 'meta.class.plantuml'
          '2':
            'name': 'entity.name.function.plantuml'
          '3':
            'name': 'constant.other.color.plantuml'
          '4':
            'name': 'meta.class.plantuml'
          '5':
            'name': 'keyword.control.plantuml'
          '6':
            'name': 'meta.class.plantuml'
          '7':
            'name': 'punctuation.plantuml'
          '8':
            'name': 'string.plantuml'
      }
      {
        'name': 'meta.sequence.verticalspace.plantuml'
        'match': '^\\s*(?:(\\|{3})|(\\|\\|(\\d+)\\|\\|))\\s*$'
        'captures':
          '1':
            'name': 'punctuation.plantuml'
          '2':
            'name': 'punctuation.plantuml'
          '3':
            'name': 'constant.numeric.plantuml'
      }
      {
        'name': 'meta.sequence.footbox.plantuml'
        'match': '^\\s*(hide\\s+footbox)\\s*$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
      }
    ]
  'usecase_diagram':
    'patterns': []
  'class_diagram':
    'patterns': [
      {
        'name': 'entity.name.function.plantuml'
        'match': '^\\s*([\\w\\u0080-\\uFFFF]+|"[^"]+")\\s*("[^"]*")?\\s*((?:<\\|?|\\*|(?=<\\s)o)?(?:-+|\\.+)(?:\\|?>|\\*|o(?=\\s))?)\\s*("[^"]*")?\\s*([\\w\\u0080-\\uFFFF]+|"[^"]+")\\s*(?:(:)\\s*(<|>)?\\s*([^<>]*)\\s*(<|>)?\\s*)?\\s*$'
        'captures':
          '1':
            'name': 'meta.class.plantuml'
          '2':
            'name': 'string.plantuml'
          '3':
            'name': 'keyword.operator.plantuml'
          '4':
            'name': 'string.plantuml'
          '5':
            'name': 'meta.class.plantuml'
          '6':
            'name': 'punctuation.plantuml'
          '7':
            'name': 'keyword.operator.plantuml'
          '8':
            'name': 'string.plantuml'
          '9':
            'name': 'keyword.operator.plantuml'
      }
      {
        'name': 'meta.class.declaring.plantuml'
        'match': '^\\s*(class|abstract(?:\\s+class)?|interface|annotation|enum)\\s+((?:[\\w\\u0080-\\uFFFF]+|"[^"]+")(?:<[^>]+>)?)(?:\\s+(as)\\s+([\\w\\u0080-\\uFFFF]+|"[^"]+"))?\\s*(?:\\s+(<<)\\s*(?:\\((.),(\\#?\\w+)\\))?\\s*([^<>\\(\\)]+)?\\s*(>>))?(?:\\s+(\\#\\w+))?\\s*$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'meta.class.plantuml'
          '3':
            'name': 'keyword.control.plantuml'
          '4':
            'name': 'meta.class.plantuml'
          '5':
            'name': 'punctuation.plantuml'
          '6':
            'name': 'constant.character.plantuml'
          '7':
            'name': 'constant.other.color.plantuml'
          '8':
            'name': 'string.other.stereotype.plantuml'
          '9':
            'name': 'punctuation.plantuml'
          '10':
            'name': 'constant.other.color.plantuml'
      }
      {
        'name': 'meta.class.declaring.block.plantuml'
        'begin': '^\\s*(class|abstract(?:\\s+class)?|interface|annotation|enum)\\s+((?:[\\w\\u0080-\\uFFFF]+|"[^"]+")(?:<[^>]+>)?)(?:\\s+(as)\\s+([\\w\\u0080-\\uFFFF]+|"[^"]+"))?\\s*(?:\\s+(<<)\\s*(?:\\((.),(\\#?\\w+)\\))?\\s*([^<>\\(\\)]+)?\\s*(>>))?(?:\\s+(\\#\\w+))?\\s*({)\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'meta.class.plantuml'
          '3':
            'name': 'keyword.control.plantuml'
          '4':
            'name': 'meta.class.plantuml'
          '5':
            'name': 'punctuation.plantuml'
          '6':
            'name': 'constant.character.plantuml'
          '7':
            'name': 'constant.other.color.plantuml'
          '8':
            'name': 'string.other.stereotype.plantuml'
          '9':
            'name': 'punctuation.plantuml'
          '10':
            'name': 'constant.other.color.plantuml'
          '11':
            'name': 'punctuation.plantuml'
        'end': '^\\s*(})\\s*$'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.block.end.plantuml'
        'patterns': [
          {
            'include': '#class_block'
          }
        ]
      }
      {
        'name': 'meta.class.paramater.plantuml'
        'match': '^\\s*([\\w\\u0080-\\uFFFF]+|"[^"]+")\\s+(:)\\s+(-|\\#|~|\\+)?\\s*(\\{(?:static|classifier|abstract)\\})?\\s*(\\{(?:static|classifier|abstract)\\})?\\s*(?:([^\\(\\):\\s][^\\(\\):]*)\\s+)?([^\\(\\):\\s]+)\\s*[^\\(\\):]*(?:(:)\\s*(\\S.*(?!<\\s))?)?\\s*$'
        'captures':
          '1':
            'name': 'meta.class.plantuml'
          '2':
            'name': 'punctuation.plantuml'
          '3':
            'name': 'constant.plantuml'
          '4':
            'name': 'keyword.control.plantuml'
          '5':
            'name': 'keyword.control.plantuml'
          '6':
            'name': 'meta.class.plantuml'
          '7':
            'name': 'variable.paramater.plantuml'
          '8':
            'name': 'keyword.operator.plantuml'
          '9':
            'name': 'meta.class.plantuml'
      }
      {
        'name': 'meta.class.method.plantuml'
        'begin': '^\\s*([\\w\\u0080-\\uFFFF]+|"[^"]+")\\s+(:)\\s+(-|\\#|~|\\+)?\\s*(\\{(?:static|classifier|abstract)\\})?\\s*(\\{(?:static|classifier|abstract)\\})?\\s*(?:([^\\(\\):\\s][^\\(\\):]*)\\s+)?([^\\(\\):\\s]+)\\s*(\\()\\s*'
        'end': '\\s*(\\))\\s*[^\\(\\):]*(?:(:)\\s*(\\S.*(?!<\\s))?)?\\s*$'
        'beginCaptures':
          '1':
            'name': 'meta.class.plantuml'
          '2':
            'name': 'punctuation.plantuml'
          '3':
            'name': 'keyword.other.plantuml'
          '4':
            'name': 'keyword.control.plantuml'
          '5':
            'name': 'keyword.control.plantuml'
          '6':
            'name': 'meta.class.plantuml'
          '7':
            'name': 'entity.name.function.plantuml'
          '8':
            'name': 'punctuation.plantuml'
        'endCaptures':
          '1':
            'name': 'punctuation.plantuml'
          '2':
            'name': 'keyword.operator.plantuml'
          '3':
            'name': 'meta.class.plantuml'
        'patterns': [
          {
            'include': '#class_function_arguments'
          }
        ]
      }
    ]
  'activity_diagram':
    'patterns': [
      {
        'name': 'meta.activitybeta.flow.plantuml'
        'match': '^\\s*(start|stop|end|detach)\\s*$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
      }
      {
        'name': 'meta.activitybeta.step.plantuml'
        'begin': '^\\s*(\\#\\w+)?(:)'
        'beginCaptures':
          '1':
            'name': 'constant.other.color.plantuml'
          '2':
            'name': 'punctuation.plantuml'
        'end': '([;<>\\|\\]\\}/])\\s*$'
        'endCaptures':
          '1':
            'name': 'punctuation.plantuml'
        'contentName': 'string.plantuml'
      }
      {
        'name': 'meta.activitybeta.arrow.plantuml'
        'begin': '^\\s*(->|-\\[(\\#\\w+)\\]->)'
        'beginCaptures':
          '1':
            'name': 'constant.plantuml'
          '2':
            'name': 'constant.other.color.plantuml'
        'end': '(;)\\s*$'
        'endCaptures':
          '1':
            'name': 'punctuation.plantuml'
        'contentName': 'string.plantuml'
      }
      {
        'name': 'meta.activitybeta.swimlane.plantuml'
        'match': '^\\s*(?:(\\|)(\\#\\w+))?(\\|)([^|]+)(\\|)\\s*$'
        'captures':
          '1':
            'name': 'punctuation.plantuml'
          '2':
            'name': 'constant.other.color.plantuml'
          '3':
            'name': 'punctuation.plantuml'
          '4':
            'name': 'string.plantuml'
          '5':
            'name': 'punctuation.plantuml'
      }
      {
        'name': 'meta.activitybeta.if.plantuml'
        'begin': '^\\s*(if)\\s*(\\()([^\\)]+)(\\))\\s*(then)\\s*(?:(\\()([^\\)]+)(\\)))?\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'punctuation.plantuml'
          '3':
            'name': 'string.plantuml'
          '4':
            'name': 'punctuation.plantuml'
          '5':
            'name': 'keyword.control.plantuml'
          '6':
            'name': 'punctuation.plantuml'
          '7':
            'name': 'string.plantuml'
          '8':
            'name': 'punctuation.plantuml'
        'end': '^\\s*(endif)\\s*$'
        'endCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'patterns': [
          {
            'include': '#common'
          }
          {
            'include': '#activity_diagram'
          }
          {
            'name': 'meta.activitybeta.elseif.plantuml'
            'match': '^\\s*(elseif)\\s*(\\()([^\\)]+)(\\))\\s*(then)\\s*(?:(\\()([^\\)]+)(\\)))?\\s*$'
            'captures':
              '1':
                'name': 'keyword.control.plantuml'
              '2':
                'name': 'punctuation.plantuml'
              '3':
                'name': 'string.plantuml'
              '4':
                'name': 'punctuation.plantuml'
              '5':
                'name': 'keyword.control.plantuml'
              '6':
                'name': 'punctuation.plantuml'
              '7':
                'name': 'string.plantuml'
              '8':
                'name': 'punctuation.plantuml'
          }
          {
            'name': 'meta.activitybeta.else.plantuml'
            'match': '^\\s*(else)\\s*(?:(\\()([^\\)]+)(\\)))?\\s*$'
            'captures':
              '1':
                'name': 'keyword.control.plantuml'
              '2':
                'name': 'punctuation.plantuml'
              '3':
                'name': 'string.plantuml'
              '4':
                'name': 'punctuation.plantuml'
          }
        ]
      }
      {
        'name': 'meta.activitybeta.while.plantuml'
        'begin': '^\\s*(while)\\s*(\\()([^\\)]+)(\\))(?:\\s*(is)\\s*(\\()([^\\)]+)(\\)))?\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'punctuation.plantuml'
          '3':
            'name': 'string.plantuml'
          '4':
            'name': 'punctuation.plantuml'
          '5':
            'name': 'keyword.control.plantuml'
          '6':
            'name': 'punctuation.plantuml'
          '7':
            'name': 'string.plantuml'
          '8':
            'name': 'punctuation.plantuml'
        'end': '^\\s*(end\\s*while)(?:\\s*(\\()([^\\)]+)(\\)))?\\s*$'
        'endCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'punctuation.plantuml'
          '3':
            'name': 'string.plantuml'
          '4':
            'name': 'punctuation.plantuml'
        'patterns': [
          {
            'include': '#common'
          }
          {
            'include': '#activity_diagram'
          }
        ]
      }
      {
        'name': 'meta.activitybeta.repeat.plantuml'
        'begin': '^\\s*(repeat)\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'end': '^\\s*(repeat\\s+while)\\s*(\\()([^\\)]+)(\\))\\s*$'
        'endCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'punctuation.plantuml'
          '3':
            'name': 'string.plantuml'
          '4':
            'name': 'punctuation.plantuml'
        'patterns': [
          {
            'include': '#common'
          }
          {
            'include': '#activity_diagram'
          }
        ]
      }
      {
        'name': 'meta.activitybeta.fork.plantuml'
        'begin': '^\\s*(fork)\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'end': '^\\s*(end\\s*fork)\\s*$'
        'endCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'patterns': [
          {
            'include': '#common'
          }
          {
            'include': '#activity_diagram'
          }
          {
            'name': 'meta.activitybeta.forkagain.plantuml'
            'match': '^\\s*(fork\\s+again)\\s*$'
            'captures':
              '1':
                'name': 'keyword.control.plantuml'
          }
        ]
      }
      {
        'name': 'meta.activitybeta.split.plantuml'
        'begin': '^\\s*(split)\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'end': '^\\s*(end\\s*split)\\s*$'
        'endCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'patterns': [
          {
            'include': '#common'
          }
          {
            'include': '#activity_diagram'
          }
          {
            'name': 'meta.activitybeta.splitagain.plantuml'
            'match': '^\\s*(split\\s+again)\\s*$'
            'captures':
              '1':
                'name': 'keyword.control.plantuml'
          }
        ]
      }
      {
        'name': 'meta.activitybeta.partition.plantuml'
        'begin': '^\\s*(partition)\\s*(.*)\\s*(\\{)\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'string.plantuml'
          '3':
            'name': '{punc_name}.plantuml'
        'end': '^\\s*(\\})\\s*$'
        'endCaptures':
          '1':
            'name': '{punc_name}.plantuml'
        'patterns': [
          {
            'include': '#common'
          }
          {
            'include': '#activity_diagram'
          }
        ]
      }
    ]
  'component_diagram':
    'patterns': []
  'state_diagram_start':
    'patterns': [
      {
        'name': 'meta.state.start.arrow.plantuml'
        'begin': '^\\s*((?:\\[\\*\\]))\\s*((?:->|-(?:d|do|down|u|up|r|ri|right|l|le|left)?->))\\s*((?:[\\w\\u0080-\\uFFFF]+|"[^"]+"))\\s*(?:(:)\\s*(.*))?\\s*$'
        'beginCaptures':
          '1':
            'name': 'constant.plantuml'
          '2':
            'name': 'entity.name.function.plantuml'
          '3':
            'name': 'meta.class.plantuml'
          '4':
            'name': 'punctuation.plantuml'
          '5':
            'name': 'string.plantuml'
        'end': '(?=@enduml)'
        'patterns': [
          {
            'include': '#common'
          }
          {
            'include': '#state_diagram'
          }
        ]
      }
      {
        'name': 'meta.state.start.declaring.plantuml'
        'begin': '(?=^\\s*state\\s+)'
        'end': '(?=@enduml)'
        'patterns': [
          {
            'include': '#common'
          }
          {
            'include': '#state_diagram'
          }
        ]
      }
    ]
  'state_diagram':
    'patterns': [
      {
        'name': 'meta.state.arrow.plantuml'
        'match': '^\\s*(?:((?:\\[\\*\\]))|((?:[\\w\\u0080-\\uFFFF]+|"[^"]+")))\\s*((?:->|-(?:d|do|down|u|up|r|ri|right|l|le|left)?->))\\s*(?:((?:[\\w\\u0080-\\uFFFF]+|"[^"]+"))|((?:\\[\\*\\])))(?:\\s*(:)\\s+(.*))?\\s*$'
        'captures':
          '1':
            'name': 'constant.plantuml'
          '2':
            'name': 'meta.class.plantuml'
          '3':
            'name': 'entity.name.function.plantuml'
          '4':
            'name': 'meta.class.plantuml'
          '5':
            'name': 'constant.plantuml'
          '6':
            'name': 'punctuation.plantuml'
          '7':
            'name': 'string.plantuml'
      }
      {
        'name': 'meta.state.comment.plantuml'
        'match': '^\\s*((?:[\\w\\u0080-\\uFFFF]+|"[^"]+"))\\s*(:)\\s*(.*)\\s*$'
        'captures':
          '1':
            'name': 'meta.class.plantuml'
          '2':
            'name': 'punctuation.plantuml'
          '3':
            'name': 'string.plantuml'
      }
      {
        'name': 'meta.state.comment.plantuml'
        'match': '^\\s*(--|\\|\\|)\\s*$'
        'captures':
          '1':
            'name': 'punctuation.plantuml'
      }
      {
        'name': 'meta.state.declaring.block.plantuml'
        'begin': '^\\s*(state)\\s+(?:("[^"]+")\\s+(as)\\s+)?((?:[\\w\\u0080-\\uFFFF]+|"[^"]+"))(?:\\s+(<<)\\s*(?:\\((.),(\\#?\\w+)\\))?\\s*([^<>\\(\\)]+)?\\s*(>>))?(?:\\s+(\\#\\w+))?\\s*({)\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'meta.class.plantuml'
          '3':
            'name': 'keyword.control.plantuml'
          '4':
            'name': 'meta.class.plantuml'
          '5':
            'name': 'punctuation.plantuml'
          '6':
            'name': 'constant.character.plantuml'
          '7':
            'name': 'constant.other.color.plantuml'
          '8':
            'name': 'string.other.stereotype.plantuml'
          '9':
            'name': 'punctuation.plantuml'
          '10':
            'name': 'constant.other.color.plantuml'
          '11':
            'name': 'punctuation.plantuml'
        'end': '^\\s*(})\\s*$'
        'endCaptures':
          '1':
            'name': 'punctuation.plantuml'
        'patterns': [
          {
            'include': '#common'
          }
          {
            'include': '#state_diagram'
          }
        ]
      }
      {
        'name': 'meta.state.declaring.inline.plantuml'
        'match': '^\\s*(state)\\s+(?:("[^"]+")\\s+(as)\\s+)?((?:[\\w\\u0080-\\uFFFF]+|"[^"]+"))(?:\\s+(<<)\\s*(?:\\((.),(\\#?\\w+)\\))?\\s*([^<>\\(\\)]+)?\\s*(>>))?(?:\\s+(\\#\\w+))?\\s*$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'meta.class.plantuml'
          '3':
            'name': 'keyword.control.plantuml'
          '4':
            'name': 'meta.class.plantuml'
          '5':
            'name': 'punctuation.plantuml'
          '6':
            'name': 'constant.character.plantuml'
          '7':
            'name': 'constant.other.color.plantuml'
          '8':
            'name': 'string.other.stereotype.plantuml'
          '9':
            'name': 'punctuation.plantuml'
          '10':
            'name': 'constant.other.color.plantuml'
      }
    ]
  'object_diagram':
    'patterns': []
  'class_block':
    'patterns': [
      {
        'name': 'meta.class.separator.plantuml'
        'match': '^\\s*(--+|\\.\\.+|==+|__+)\\s*(?:([^-\\.=__]+)\\s*(--+|\\.\\.+|==+|__+)\\s*)?$'
        'captures':
          '1':
            'name': 'keyword.operator.plantuml'
          '2':
            'name': 'string.plantuml'
          '3':
            'name': 'keyword.operator.plantuml'
      }
      {
        'name': 'meta.class.paramater.plantuml'
        'match': '^\\s*(-|\\#|~|\\+)?\\s*(\\{(?:static|classifier|abstract)\\})?\\s*(\\{(?:static|classifier|abstract)\\})?\\s*(?:([^\\(\\):\\s][^\\(\\):]*)\\s+)?([^\\(\\):\\s]+)\\s*[^\\(\\):]*(?:(:)\\s*(\\S.*(?!<\\s))?)?\\s*$'
        'captures':
          '1':
            'name': 'keyword.other.plantuml'
          '2':
            'name': 'keyword.control.plantuml'
          '3':
            'name': 'keyword.control.plantuml'
          '4':
            'name': 'meta.class.plantuml'
          '5':
            'name': 'variable.paramater.plantuml'
          '6':
            'name': 'keyword.operator.plantuml'
          '7':
            'name': 'meta.class.plantuml'
      }
      {
        'name': 'meta.class.method.plantuml'
        'begin': '^\\s*(-|\\#|~|\\+)?\\s*(\\{(?:static|classifier|abstract)\\})?\\s*(\\{(?:static|classifier|abstract)\\})?\\s*(?:([^\\(\\):\\s][^\\(\\):]*)\\s+)?([^\\(\\):\\s]+)\\s*(\\()\\s*'
        'beginCaptures':
          '1':
            'name': 'keyword.other.plantuml'
          '2':
            'name': 'keyword.control.plantuml'
          '3':
            'name': 'keyword.control.plantuml'
          '4':
            'name': 'meta.class.plantuml'
          '5':
            'name': 'entity.name.function.plantuml'
          '6':
            'name': 'punctuation.plantuml'
        'end': '\\s*(\\))\\s*[^\\(\\):]*(?:(:)\\s*(\\S.*(?!<\\s))?)?\\s*$'
        'endCaptures':
          '1':
            'name': 'punctuation.plantuml'
          '2':
            'name': 'keyword.operator.plantuml'
          '3':
            'name': 'meta.class.plantuml'
        'patterns': [
          {
            'include': '#class_function_arguments'
          }
        ]
      }
    ]
  'class_function_arguments':
    'patterns': [
      {
        'name': 'meta.function.argument.plantuml'
        'match': '\\s*(?:([^\\(\\):,\\s][^\\(\\):,]*)\\s+)?([^\\(\\):,\\s]+)\\s*(?:(:)\\s*([^\\(\\):,\\s][^\\(\\):,]*(?!<\\s)))?\\s*,?\\s*'
        'captures':
          '1':
            'name': 'meta.class.plantuml'
          '2':
            'name': 'variable.paramater.plantuml'
          '3':
            'name': 'keyword.operator.plantuml'
          '4':
            'name': 'meta.class.plantuml'
      }
    ]
  'preprocessor':
    'patterns': [
      {
        'name': 'meta.preprocessor.include.plantuml'
        'match': '^\\s*(!include)\\s+(.*)$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'meta.class.plantuml'
      }
      {
        'name': 'meta.preprocessor.define.plantuml'
        'begin': '^\\s*(!define)\\s+([\\w\\u0080-\\uFFFF]+)(?:(\\()([^)]*)(\\)))?\\s*'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'entity.name.function.plantuml'
          '3':
            'name': 'punctuation.plantuml'
          '4':
            'name': 'string.plantuml'
          '5':
            'name': 'punctuation.plantuml'
        'end': '\\s*$'
        'patterns': [
          {
            'include': '#plantuml'
          }
        ]
      }
      {
        'name': 'meta.preprocessor.undef.plantuml'
        'match': '^\\s*(!undef)\\s+([\\w\\u0080-\\uFFFF]+)\\s*$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'entity.name.function.plantuml'
      }
      {
        'name': 'meta.preprocessor.definelong.plantuml'
        'begin': '^\\s*(!definelong)\\s+([\\w\\u0080-\\uFFFF]+)(\\()([^)]*)(\\))\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'entity.name.function.plantuml'
          '3':
            'name': 'punctuation.plantuml'
          '4':
            'name': 'string.plantuml'
          '5':
            'name': 'punctuation.plantuml'
        'end': '^\\s*(!end\\s*definelong)\\s*$'
        'endCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'patterns': [
          {
            'include': '#plantuml'
          }
        ]
      }
      {
        'name': 'meta.preprocessor.ifdef.plantuml'
        'begin': '^\\s*(!ifn?def)\\s+([\\w\\u0080-\\uFFFF]+)\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'entity.name.function.plantuml'
        'end': '^\\s*(!endif)\\s*$'
        'endCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'patterns': [
          {
            'include': '#plantuml'
          }
        ]
      }
      {
        'name': 'meta.preprocessor.macrocall.plantuml'
        'match': '^\\s*([\\w\\u0080-\\uFFFF]+)(\\()([^)]*)(\\))\\s*$'
        'captures':
          '1':
            'name': 'entity.name.function.plantuml'
          '2':
            'name': 'punctuation.plantuml'
          '3':
            'name': 'string.plantuml'
          '4':
            'name': 'punctuation.plantuml'
      }
    ]