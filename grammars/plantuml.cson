'fileTypes': [
  'puml'
  'plantuml'
  'txt'
]
'firstLineMatch': '^@startuml'
'name': 'PlantUML'
'scopeName': 'source.plantuml'
'patterns': [
  {
    'name': 'meta.source.block.plantuml'
    'begin': '^@startuml'
    'beginCaptures':
      '0':
        'name': 'punctuation.section.source.begin.plantuml'
    'contentName': 'source.plantuml'
    'end': '^@enduml'
    'endCaptures':
      '0':
        'name': 'punctuation.section.sourec.end.plantuml'
    'patterns': [
      {
        'include': '#plantuml'
      }
    ]
  }
]
'repository':
  'plantuml':
    'patterns': [
      {
        'include': '#comments'
      }
      {
        'name': 'meta.skinparam.plantuml'
        'match': '^\\s*(skinparam)\\s+(\\S+)\\s+(.*)$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'entity.name.tag.plantuml'
          '3':
            'name': 'constant.other.plantuml'
      }
      {
        'name': 'meta.title.plantuml'
        'match': '^\\s*(title)\\s+(\\S.*)$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'string.unquoted.plantuml'
      }
      {
        'name': 'meta.legend.block.plantuml'
        'begin': '^\\s*(legend)(?:\\s+(left|right|center))?\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'variable.language.plantuml'
        'end': '^\\s*(endlegend)\\s*$'
        'endCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'contentName': 'string.unquoted.plantuml'
      }
      {
        'name': 'meta.newpage.plantuml'
        'match': '^\\s*(newpage)\\s*$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
      }
      {
        'name': 'meta.note.block.plantuml'
        'begin': '^\\s*([hr]?note)\\s*(?:\\s+((?:left|right)(?:\\s+of)|over)(?:\\s+([\\w\\u0080-\\uFFFF]+)(\\s*,\\s*([\\w\\u0080-\\uFFFF]+))*)?(?:\\s+(\\#\\w+))?)?\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'variable.language.plantuml'
          '3':
            'name': 'entity.type.name.plantuml'
          '5':
            'name': 'entity.type.name.plantuml'
          '6':
            'name': 'constant.other.color.plantuml'
        'end': '^\\s*(end\\s+[hr]?note|end[hr]note)\\s*$'
        'endCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'contentName': 'string.unquoted.plantuml'
      }
      {
        'name': 'meta.note.line.plantuml'
        'match': '^([hr]?note)\\s*(?:\\s+(left|right|left\\s+of|right\\s+of|over)(?:\\s+([\\w\\u0080-\\uFFFF]+)(\\s*,\\s*([\\w\\u0080-\\uFFFF]+))*)?(?:\\s+(\\#\\w+))?)?\\s*(:)\\s*(\\S.*)\\s*$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'variable.language.plantuml'
          '3':
            'name': 'entity.type.name.plantuml'
          '5':
            'name': 'entity.type.name.plantuml'
          '6':
            'name': 'constant.other.color.plantuml'
          '7':
            'name': 'keyword.operator.plantuml'
          '8':
            'name': 'string.unquoted.plantuml'
      }
      {
        'include': '#sequence_diagram'
      }
      {
        'include': '#usecase_diagram'
      }
      {
        'include': '#class_diagram'
      }
      {
        'include': '#activity_diagram'
      }
      {
        'include': '#component_diagram'
      }
      {
        'include': '#state_diagram'
      }
      {
        'include': '#object_diagram'
      }
    ]
  'comments':
    'patterns': [
      {
        'begin': '(^[ \\t]+)?(?=\\\')'
        'beginCaptures':
          '1':
            'name': 'punctuation.whitespace.comment.leading.plantuml'
        'end': '(?!\\G)'
        'patterns': [
          {
            'name': 'comment.line.singlequote.plantuml'
            'begin': '\''
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.comment.plantuml'
            'end': '\\n'
          }
        ]
      }
      {
        'name': 'comment.block.plantuml'
        'begin': '/\''
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.comment.begin.plantuml'
        'end': '\'/'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.comment.end.plantuml'
      }
    ]
  'sequence_diagram':
    'patterns': [
      {
        'name': 'meta.sequence.driver.plantuml'
        'match': '^\\s*(==+)\\s*([^=]+)\\s*(==+)\\s*$'
        'captures':
          '1':
            'name': 'keyword.operator.plantuml'
          '2':
            'name': 'string.unquoted.plantuml'
          '3':
            'name': 'keyword.operator.plantuml'
      }
      {
        'name': 'meta.autonumber.plantuml'
        'match': '^\\s*(autonumber)\\s+(?:(\\d+)|("[^"]+"))?\\s+(?:(\\d+)|("[^"]+"))?\\s+(?:("[^"]+"))?\\s*$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'constant.numeric.plantuml'
          '3':
            'name': 'string.quoted.double.plantuml'
          '4':
            'name': 'constant.numeric.plantuml'
          '5':
            'name': 'string.quoted.double.plantuml'
          '6':
            'name': 'string.quoted.double.plantuml'
      }
      {
        'name': 'meta.sequence.alt.plantuml'
        'begin': '^\\s*(alt)(?:\\s+(.*))?\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'string.unquoted.plantuml'
        'end': '^\\s*(end)\\s*$'
        'endCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'patterns': [
          {
            'match': '^\\s*(else)(?:\\s+(.*))?\\s*$'
            'captures':
              '1':
                'name': 'keyword.control.plantuml'
              '2':
                'name': 'string.unquoted.plantuml'
          }
          {
            'include': '#plantuml'
          }
        ]
      }
      {
        'name': 'meta.sequence.box.plantuml'
        'begin': '^\\s*(box)\\s+(.*)\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'string.quoted.plantuml'
        'end': '^\\s*(end\\s+box)\\s*$'
        'endCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'patterns': [
          {
            'include': '#plantuml'
          }
        ]
      }
      {
        'name': 'meta.sequence.loop.plantuml'
        'begin': '^\\s*(loop)(?:\\s+(.*)\\s+(times))?\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'variable.language.plantuml'
          '3':
            'name': 'keyword.control.plantuml'
        'end': '^\\s*(end(?:\\s+loop)?)\\s*$'
        'endCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'patterns': [
          {
            'include': '#plantuml'
          }
        ]
      }
      {
        'name': 'meta.sequence.groupalt.plantuml'
        'begin': '^\\s*(opt|loop|par|break|critical)(?:\\s+(.*))?\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'string.unquoted.plantuml'
        'end': '^\\s*(end(?:\\s+\\1)?)\\s*$'
        'endCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'patterns': [
          {
            'include': '#plantuml'
          }
        ]
      }
      {
        'name': 'meta.sequence.group.plantuml'
        'begin': '^\\s*(group)\\s+(.*)\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'string.unquoted.plantuml'
        'end': '^\\s*(end(?:\\s+\\1)?)\\s*$'
        'endCaptures':
          '1':
            'name': 'keyword.control.plantuml'
        'patterns': [
          {
            'include': '#plantuml'
          }
        ]
      }
      {
        'name': 'meta.sequence.declaring.plantuml'
        'match': '^\\s*(create(?:\\s+(?:actor|boundary|control|entity|database|participant))?|(?:actor|boundary|control|entity|database|participant))\\s+(?:([\\w\\u0080-\\uFFFF]+|"[^"]+")\\s+(as))?\\s+([\\w\\u0080-\\uFFFF]+|"[^"]+")(?:\\s+(<<)\\s*(?:\\((.),(\\#?\\w+)\\))?(.*)\\s*(>>))?(?:\\s+(\\#\\w+))?\\s*$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'entity.name.type.plantuml'
          '3':
            'name': 'keyword.control.plantuml'
          '4':
            'name': 'entity.name.type.plantuml'
          '5':
            'name': 'punctuation.definition.stereotype.begin.plantuml'
          '6':
            'name': 'constant.character.plantuml'
          '7':
            'name': 'constant.other.color.plantuml'
          '8':
            'name': 'string.other.stereotype.plantuml'
          '9':
            'name': 'punctuation.definition.stereotype.end.plantuml'
          '10':
            'name': 'constant.other.color.plantuml'
      }
      {
        'name': 'meta.sequence.activate.plantuml'
        'match': '^\\s*((?:de)?activate)\\s+(.*)\\s*$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'entity.name.type.plantuml'
      }
      {
        'name': 'meta.sequence.arrow.plantuml'
        'match': '^\\s*(?:([\\w\\u0080-\\uFFFF]+|"[^"]+")\\s*|(\\[))((?:[ox])?(?:<<?|\\\\\\\\?|//?)?-(?:\\[(\\#\\w+)\\])?-?(?:>>?|\\\\\\\\?|//?)?(?:[ox](?=\\]|\\s))?)(?:(\\])|\\s*([\\w\\u0080-\\uFFFF]+|"[^"]+")(?:\\s+(as)\\s+([\\w\\u0080-\\uFFFF]+|"[^"]+"))?)\\s*(:)\\s*(.*)$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'meta.class.bracket.left.plantuml'
          '3':
            'name': 'meta.class.arrow.plantuml'
          '4':
            'name': 'constant.other.color.plantuml'
          '5':
            'name': 'meta.class.bracket.right.plantuml'
          '6':
            'name': 'entity.name.type.plantuml'
          '7':
            'name': 'keyword.control.plantuml'
          '8':
            'name': 'entity.name.type.plantuml'
          '9':
            'name': 'constant.other.color.plantuml'
          '10':
            'name': 'string.unquoted.plantuml'
      }
    ]
  'usecase_diagram':
    'patterns': []
  'class_diagram':
    'patterns': [
      {
        'name': 'meta.class.arrow.plantuml'
        'match': '^\\s*([\\w\\u0080-\\uFFFF]+|"[^"]+")\\s*("[^"]*")?\\s*((?:<\\|?|\\*|(?=<\\s)o)?(?:-+|\\.+)(?:\\|?>|\\*|o(?=\\s))?)\\s*("[^"]*")?\\s*([\\w\\u0080-\\uFFFF]+|"[^"]+")\\s*(?:(:)\\s*(<|>)?\\s*([^<>]*)\\s*(<|>)?\\s*)?\\s*$'
        'captures':
          '1':
            'name': 'entity.name.type.plantuml'
          '2':
            'name': 'string.qoted.double.plantuml'
          '3':
            'name': 'keyword.operator.plantuml'
          '4':
            'name': 'string.qoted.double.plantuml'
          '5':
            'name': 'entity.name.type.plantuml'
          '6':
            'name': 'punctuation.definition.description.plantuml'
          '7':
            'name': 'keyword.operator.plantuml'
          '8':
            'name': 'string.unquoted.plantuml'
          '9':
            'name': 'keyword.operator.plantuml'
      }
      {
        'name': 'meta.class.declaring.plantuml'
        'match': '^\\s*(class|abstract(?:\\s+class)?|interface|annotation|enum)\\s+((?:[\\w\\u0080-\\uFFFF]+|"[^"]+")(?:<[^>]+>)?)(?:\\s+(as)\\s+([\\w\\u0080-\\uFFFF]+|"[^"]+"))?\\s*(?:\\s+(<<)\\s*(?:\\((.),(\\#?\\w+)\\))?\\s*([^<>\\(\\)]+)?\\s*(>>))?(?:\\s+(\\#\\w+))?\\s*$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'entity.name.type.plantuml'
          '3':
            'name': 'keyword.control.plantuml'
          '4':
            'name': 'entity.name.type.plantuml'
          '5':
            'name': 'punctuation.definition.stereotype.begin.plantuml'
          '6':
            'name': 'constant.character.plantuml'
          '7':
            'name': 'constant.other.color.plantuml'
          '8':
            'name': 'string.other.stereotype.plantuml'
          '9':
            'name': 'punctuation.definition.stereotype.end.plantuml'
          '10':
            'name': 'constant.other.color.plantuml'
      }
      {
        'name': 'meta.class.declaring.block.plantuml'
        'begin': '^\\s*(class|abstract(?:\\s+class)?|interface|annotation|enum)\\s+((?:[\\w\\u0080-\\uFFFF]+|"[^"]+")(?:<[^>]+>)?)(?:\\s+(as)\\s+([\\w\\u0080-\\uFFFF]+|"[^"]+"))?\\s*(?:\\s+(<<)\\s*(?:\\((.),(\\#?\\w+)\\))?\\s*([^<>\\(\\)]+)?\\s*(>>))?(?:\\s+(\\#\\w+))?\\s*({)\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'entity.name.type.plantuml'
          '3':
            'name': 'keyword.control.plantuml'
          '4':
            'name': 'entity.name.type.plantuml'
          '5':
            'name': 'punctuation.definition.stereotype.begin.plantuml'
          '6':
            'name': 'constant.character.plantuml'
          '7':
            'name': 'constant.other.color.plantuml'
          '8':
            'name': 'string.other.stereotype.plantuml'
          '9':
            'name': 'punctuation.definition.stereotype.end.plantuml'
          '10':
            'name': 'constant.other.color.plantuml'
          '11':
            'name': 'punctuation.definition.block.begin.plantuml'
        'end': '^\\s*(})\\s*$'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.block.end.plantuml'
        'patterns': [
          {
            'include': '#class_block'
          }
        ]
      }
      {
        'name': 'meta.class.paramater.plantuml'
        'match': '^\\s*([\\w\\u0080-\\uFFFF]+|"[^"]+")\\s+(:)\\s+(-|\\#|~|\\+)?\\s*(\\{(?:static|classifier|abstract)\\})?\\s*(\\{(?:static|classifier|abstract)\\})?\\s*(?:([^\\(\\):\\s][^\\(\\):]*)\\s+)?([^\\(\\):\\s]+)\\s*[^\\(\\):]*(?:(:)\\s*(\\S.*(?!<\\s))?)?\\s*$'
        'captures':
          '1':
            'name': 'entity.name.type.plantuml'
          '2':
            'name': 'punctuation.definition.description.plantuml'
          '3':
            'name': 'keyword.other.plantuml'
          '4':
            'name': 'keyword.control.plantuml'
          '5':
            'name': 'keyword.control.plantuml'
          '6':
            'name': 'entity.name.type.plantuml'
          '7':
            'name': 'variable.paramater.plantuml'
          '8':
            'name': 'keyword.operator.plantuml'
          '9':
            'name': 'entity.name.type.plantuml'
      }
      {
        'name': 'meta.class.method.plantuml'
        'begin': '^\\s*([\\w\\u0080-\\uFFFF]+|"[^"]+")\\s+(:)\\s+(-|\\#|~|\\+)?\\s*(\\{(?:static|classifier|abstract)\\})?\\s*(\\{(?:static|classifier|abstract)\\})?\\s*(?:([^\\(\\):\\s][^\\(\\):]*)\\s+)?([^\\(\\):\\s]+)\\s*(\\()\\s*'
        'end': '\\s*(\\))\\s*[^\\(\\):]*(?:(:)\\s*(\\S.*(?!<\\s))?)?\\s*$'
        'beginCaptures':
          '1':
            'name': 'entity.name.type.plantuml'
          '2':
            'name': 'punctuation.definition.description.plantuml'
          '3':
            'name': 'keyword.other.plantuml'
          '4':
            'name': 'keyword.control.plantuml'
          '5':
            'name': 'keyword.control.plantuml'
          '6':
            'name': 'entity.name.type.plantuml'
          '7':
            'name': 'entity.name.function.plantuml'
          '8':
            'name': 'punctuation.definition.function.args.begin.plantuml'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.function.args.end.plantuml'
          '2':
            'name': 'keyword.operator.plantuml'
          '3':
            'name': 'entity.name.type.plantuml'
        'patterns': [
          {
            'include': '#class_function_arguments'
          }
        ]
      }
    ]
  'activity_diagram':
    'patterns': []
  'component_diagram':
    'patterns': []
  'state_diagram':
    'patterns': []
  'object_diagram':
    'patterns': []
  'class_block':
    'patterns': [
      {
        'name': 'meta.class.separator.plantuml'
        'match': '^\\s*(--+|\\.\\.+|==+|__+)\\s*(?:([^-\\.=__]+)\\s*(--+|\\.\\.+|==+|__+)\\s*)?$'
        'captures':
          '1':
            'name': 'keyword.operator.plantuml'
          '2':
            'name': 'string.unquoted.plantuml'
          '3':
            'name': 'keyword.operator.plantuml'
      }
      {
        'name': 'meta.class.paramater.plantuml'
        'match': '^\\s*(-|\\#|~|\\+)?\\s*(\\{(?:static|classifier|abstract)\\})?\\s*(\\{(?:static|classifier|abstract)\\})?\\s*(?:([^\\(\\):\\s][^\\(\\):]*)\\s+)?([^\\(\\):\\s]+)\\s*[^\\(\\):]*(?:(:)\\s*(\\S.*(?!<\\s))?)?\\s*$'
        'captures':
          '1':
            'name': 'keyword.other.plantuml'
          '2':
            'name': 'keyword.control.plantuml'
          '3':
            'name': 'keyword.control.plantuml'
          '4':
            'name': 'entity.name.type.plantuml'
          '5':
            'name': 'variable.paramater.plantuml'
          '6':
            'name': 'keyword.operator.plantuml'
          '7':
            'name': 'entity.name.type.plantuml'
      }
      {
        'name': 'meta.class.method.plantuml'
        'begin': '^\\s*(-|\\#|~|\\+)?\\s*(\\{(?:static|classifier|abstract)\\})?\\s*(\\{(?:static|classifier|abstract)\\})?\\s*(?:([^\\(\\):\\s][^\\(\\):]*)\\s+)?([^\\(\\):\\s]+)\\s*(\\()\\s*'
        'beginCaptures':
          '1':
            'name': 'keyword.other.plantuml'
          '2':
            'name': 'keyword.control.plantuml'
          '3':
            'name': 'keyword.control.plantuml'
          '4':
            'name': 'entity.name.type.plantuml'
          '5':
            'name': 'entity.name.function.plantuml'
          '6':
            'name': 'punctuation.definition.function.args.begin.plantuml'
        'end': '\\s*(\\))\\s*[^\\(\\):]*(?:(:)\\s*(\\S.*(?!<\\s))?)?\\s*$'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.function.args.end.plantuml'
          '2':
            'name': 'keyword.operator.plantuml'
          '3':
            'name': 'entity.name.type.plantuml'
        'patterns': [
          {
            'include': '#class_function_arguments'
          }
        ]
      }
    ]
  'class_function_arguments':
    'patterns': [
      {
        'name': 'meta.function.argument.plantuml'
        'match': '\\s*(?:([^\\(\\):,\\s][^\\(\\):,]*)\\s+)?([^\\(\\):,\\s]+)\\s*(?:(:)\\s*([^\\(\\):,\\s][^\\(\\):,]*(?!<\\s)))?\\s*,?\\s*'
        'captures':
          '1':
            'name': 'entity.name.type.plantuml'
          '2':
            'name': 'variable.paramater.plantuml'
          '3':
            'name': 'keyword.operator.plantuml'
          '4':
            'name': 'entity.name.type.plantuml'
      }
    ]