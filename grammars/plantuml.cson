'name': 'PlantUML'
'scopeName': 'source.plantuml'
'fileTypes': [
  'txt'
]
'fileLineMatch': '^@startuml'
'patterns': [
  {
    'begin': '^@startuml'
    'beginCaptures':
      '0':
        'name': 'punctuation.section.documentation.begin.plantuml'
    'contentName': 'source.plantuml'
    'end': '^@enduml'
    'endCaptures':
      '0':
        'name': 'punctuation.section.documentation.end.plantuml'
    'name': 'meta.documentation.block.plantuml'
    'patterns': [
      {
        'include': '#plantuml'
      }
    ]
  }
]
'repository':
  'plantuml':
    'patterns': [
      {
        'include': '#comments'
      }
      {
        'include': '#sequence_diagram'
      }
      {
        'include': '#usecase_diagram'
      }
      {
        'include': '#class_diagram'
      }
      {
        'include': '#activity_diagram'
      }
      {
        'include': '#component_diagram'
      }
      {
        'include': '#state_diagram'
      }
      {
        'include': "#object_diagram"
      }

      # {
      #   # TODO: c-like macro
      #   'match': '(?x)^\\s*(!(?:define|endif|ifdef|ifndef|include|undef))\\b.*$'
      #   'captures':
      #     '1':
      #       'name': 'keyword.control.import.plantuml'
      #   'name': 'meta.preprocessor.plantuml'
      # }
      # {
      #   # TODO: escaped character
      #   'match': '(")([^"]*)(")'
      #   'captures':
      #     '1':
      #       'name': 'punctuation.definition.string.begin.plantuml'
      #     '3':
      #       'name': 'punctuation.definition.string.end.plantuml'
      #   'name': 'string.quoted.double.plantuml'
      # }
    ]
  'comments':
    'patterns': [
      {
        'begin': '(^[ \\t]+)?(?=\')'
        'beginCaptures':
          '1':
            'name': 'punctuation.whitespace.comment.leading.plantuml'
        'end': '(?!\\G)'
        'patterns': [
          {
            'begin': '\''
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.comment.plantuml'
            'end': '\\n'
            'name': 'comment.line.singlequote.pluantul'
          }
        ]
      }
      {
        'begin': '/\''
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.comment.begin.plantuml'
        'end': '\'/'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.comment.end.pluntuml'
        'name': 'comment.block.plantuml'
      }

    ]
  'sequence_diagram':
    'patterns': [
      {
        'match': '(?x)^\\s*
            ([\\w\\u0080-\\uFFFF]+|"[^"]+")
            (?:\\s+(as)\\s+([\\w\\u0080-\\uFFFF]+))?\\s*
            ( (?:(?<=\\s)[ox])?
              (?:<<?|\\\\\\\\?|//?)?
              -(?:\\[(\\#\\w+)\\])?-?
              (?:>>?|\\\\\\\\?|//?)?
              (?:[ox](?=\\s))?
            )\\s*
            ([\\w\\u0080-\\uFFFF]+|"[^"]+")
            (?:\\s+(as)\\s+([\\w\\u0080-\\uFFFF]+))?\\s*
            (?:(:)(.*))?
            \\s*$'
        'captures':
          '1':
            'name': 'entity.name.type.plantuml'
          '2':
            'name': 'keyword.control.plantuml'
          '3':
            'name': 'entity.name.type.plantuml'
          '4':
            'name': 'keyword.operator.plantuml'
          '5':
            'name': 'constant.other.color.plantuml'
          '6':
            'name': 'entity.name.type.plantuml'
          '7':
            'name': 'keyword.control.plantuml'
          '8':
            'name': 'entity.name.type.plantuml'
          '9':
            'name': 'punctuation.definition.description.plantuml'
          '10':
            'name': 'string.unquoted.plantuml'
        'name': 'meta.sequence.arrow.plantuml'
      }
      {
        'match': '(?x)^\\s*
            (actor|boundary|control|entity|database|participant)\\s+
            ([\\w\\u0080-\\uFFFF]+|"[^"]+")
            (?:\\s+(as)\\s+([\\w\\u0080-\\uFFFF]+))?
            (?:\\s+(<<)\\s*
              (?:\\((.),(\\#\\w+)\\))?
              (.*)
            \\s*(>>))?
            (?:\\s+(\\#\\w+))?
            \\s*$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'entity.name.type.plantuml'
          '3':
            'name': 'keyword.control.plantuml'
          '4':
            'name': 'entity.name.type.plantuml'
          '5':
            'name': 'punctuation.definition.stereotype.begin.plantuml'
          '6':
            'name': 'constant.character.plantuml'
          '7':
            'name': 'constant.other.color.plantuml'
          '8':
            'name': 'string.other.stereotype.plantuml'
          '9':
            'name': 'punctuation.definition.stereotype.end.plantuml'
          '10':
            'name': 'constant.other.color.plantuml'
        'name': 'meta.sequence.declaring.plantuml'
      }
    ]
  # TODO: implement usecase_diagram
  'usecase_diagram':
    'patterns': [
    ]
  'class_diagram':
    'patterns': [
      {
        'match': '(?x)^\\s*
            ([\\w\\u0080-\\uFFFF]+|"[^"]+")\\s*
            ("[^"]*")?\\s*
            (
                (?:<\\|?|\\*|(?<=\\s)o)?
                (?:-+|\\.+)
                (?:\\|?>|\\*|o(?=\\s))?
            )\\s*
            ("[^"]*")?\\s*
            ([\\w\\u0080-\\uFFFF]+|"[^"]+")\\s*
            (?:(:)\\s*(<|>)?\\s*([^<>]*)\\s*(<|>)?\\s*)?\\s*
            $'
        'captures':
          '1':
            'name': 'entity.name.type.plantuml'
          '2':
            'name': 'string.qoted.double.plantuml'
          '3':
            'name': 'keyword.operator.plantuml'
          '4':
            'name': 'string.qoted.double.plantuml'
          '5':
            'name': 'entity.name.type.plantuml'
          '6':
            'name': 'punctuation.definition.description.plantuml'
          '7':
            'name': 'keyword.operator.plantuml'
          '8':
            'name': 'string.unquoted.plantuml'
          '9':
            'name': 'keyword.operator.plantuml'
        'name': 'meta.class.arrow.plantuml'
      }
      {
        'match': '(?x)^\\s*
            (class|abstract(?:\\s+class)?|interface|annotation|enum)\\s+
            ((?:[\\w\\u0080-\\uFFFF]+|"[^"]+")(?:<[^>]+>)?)
            (?:\\s+(as)\\s+([\\w\\u0080-\\uFFFF]+|"[^"]+"))?\\s*
            (?:\\s+(<<)\\s*
                (?:\\((.),(\\#?\\w+)\\))?\\s*
                ([^<>\\(\\)]+)?\\s*
            (>>))?
            (?:\\s+(\\#\\w+))?
            \\s*$'
        'captures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'entity.name.type.plantuml'
          '3':
            'name': 'keyword.control.plantuml'
          '4':
            'name': 'entity.name.type.plantuml'
          '5':
            'name': 'punctuation.definition.stereotype.begin.plantuml'
          '6':
            'name': 'constant.character.plantuml'
          '7':
            'name': 'constant.other.color.plantuml'
          '8':
            'name': 'string.other.stereotype.plantuml'
          '9':
            'name': 'punctuation.definition.stereotype.end.plantuml'
          '10':
            'name': 'constant.other.color.plantuml'
        'name': 'meta.class.declaring.plantuml'
      }
      {
        'begin': '(?x)^\\s*
            (class|abstract(?:\\s+class)?|interface|annotation|enum)\\s+
            ((?:[\\w\\u0080-\\uFFFF]+|"[^"]+")(?:<[^>]+>)?)
            (?:\\s+(as)\\s+([\\w\\u0080-\\uFFFF]+|"[^"]+"))?\\s*
            (?:\\s+(<<)\\s*
                (?:\\((.),(\\#?\\w+)\\))?\\s*
                ([^<>\\(\\)]+)?\\s*
            (>>))?
            (?:\\s+(\\#\\w+))?
            \\s*({)\\s*$'
        'beginCaptures':
          '1':
            'name': 'keyword.control.plantuml'
          '2':
            'name': 'entity.name.type.plantuml'
          '3':
            'name': 'keyword.control.plantuml'
          '4':
            'name': 'entity.name.type.plantuml'
          '5':
            'name': 'punctuation.definition.stereotype.begin.plantuml'
          '6':
            'name': 'constant.character.plantuml'
          '7':
            'name': 'constant.other.color.plantuml'
          '8':
            'name': 'string.other.stereotype.plantuml'
          '9':
            'name': 'punctuation.definition.stereotype.end.plantuml'
          '10':
            'name': 'constant.other.color.plantuml'
          '11':
            'name': 'punctuation.definition.block.begin.plantuml'
        'end': '^\\s*(})\\s*$'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.block.end.plantuml'
        'name': 'meta.class.declaring.plantuml'
        'patterns': [
          {
            'include': '#class_block'
          }
        ]
      }
      {
        'match': '(?x)^\\s*
            ([\\w\\u0080-\\uFFFF]+|"[^"]+")\\s+
            (:)\\s+
            (-|\\#|~|\\+)?\\s*
            ({static}|{classifier}|{abstract})?\\s*
            ({static}|{classifier}|{abstract})?\\s*
            (?:
                ([^\\(\\):\\s][^\\(\\):]*)\\s+
            )?
            ([^\\(\\):\\s]+)\\s*
            [^\\(\\):]*
            (?:
                (:)\\s*
                (\\S.*(?<!\\s))?
            )?\\s*
            $'
        'captures':
          '1':
            'name': 'entity.name.type.plantuml'
          '2':
            'name': 'punctuation.definition.description.plantuml'
          '3':
            'name': 'keyword.other.plantuml'
          '4':
            'name': 'keyword.control.plantuml'
          '5':
            'name': 'keyword.control.plantuml'
          '6':
            'name': 'entity.name.type.plantuml'
          '7':
            'name': 'variable.paramater.plantuml'
          '8':
            'name': 'keyword.operator.plantuml'
          '9':
            'name': 'entity.name.type.plantuml'
        'name': 'meta.class.paramater.plantuml'
      }
      {
        'begin': '(?x)^\\s*
            ([\\w\\u0080-\\uFFFF]+|"[^"]+")\\s+
            (:)\\s+
            (-|\\#|~|\\+)?\\s*
            ({static}|{classifier}|{abstract})?\\s*
            ({static}|{classifier}|{abstract})?\\s*
            (?:
                ([^\\(\\):\\s][^\\(\\):]*)\\s+
            )?
            ([^\\(\\):\\s]+)\\s*
            (\\()\\s*'
        'end': '(?x)\\s*
            (\\))\\s*
            [^\\(\\):]*
            (?:
                (:)\\s*
                (\\S.*(?<!\\s))?
            )?\\s*
            $'
        'beginCaptures':
          '1':
            'name': 'entity.name.type.plantuml'
          '2':
            'name': 'punctuation.definition.description.plantuml'
          '3':
            'name': 'keyword.other.plantuml'
          '4':
            'name': 'keyword.control.plantuml'
          '5':
            'name': 'keyword.control.plantuml'
          '6':
            'name': 'entity.name.type.plantuml'
          '7':
            'name': 'entity.name.function.plantuml'
          '8':
            'name': 'punctuation.definition.function.args.begin.plantuml'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.function.args.end.plantuml'
          '2':
            'name': 'keyword.operator.plantuml'
          '3':
            'name': 'entity.name.type.plantuml'
        'name': 'meta.class.method.plantuml'
        'patterns': [
          {
            'include': '#class_function_arguments'
          }
        ]
      }
    ]
  # TODO: implement activity_diagram
  'activity_diagram':
    'patterns': [
    ]
  # TODO: implement component_diagram
  'component_diagram':
    'patterns': [
    ]
  # TODO: implement state_diagram
  'state_diagram':
    'patterns': [
    ]
  # TODO: implement object_diagram
  'object_diagram':
    'patterns': [
    ]
  # TODO: implement usecase
  'usecase_diagram':
    'patterns': [
    ]
  'class_block':
    'patterns': [
      {
        'match': '(?x)^\\s*
            (-|\\#|~|\\+)?\\s*
            ({static}|{classifier}|{abstract})?\\s*
            ({static}|{classifier}|{abstract})?\\s*
            (?:
                ([^\\(\\):\\s][^\\(\\):]*)\\s+
            )?
            ([^\\(\\):\\s]+)\\s*
            [^\\(\\):]*
            (?:
                (:)\\s*
                (\\S.*(?<!\\s))?
            )?\\s*
            $'
        'captures': {
          '1':
            'name': 'keyword.other.plantuml'
          '2':
            'name': 'keyword.control.plantuml'
          '3':
            'name': 'keyword.control.plantuml'
          '4':
            'name': 'entity.name.type.plantuml'
          '5':
            'name': 'variable.paramater.plantuml'
          '6':
            'name': 'keyword.operator.plantuml'
          '7':
            'name': 'entity.name.type.plantuml'
        }
        'name': 'meta.class.paramater.plantuml'
      }
      {
        'begin': '(?x)^\\s*
            (-|\\#|~|\\+)?\\s*
            ({static}|{classifier}|{abstract})?\\s*
            ({static}|{classifier}|{abstract})?\\s*
            (?:
                ([^\\(\\):\\s][^\\(\\):]*)\\s+
            )?
            ([^\\(\\):\\s]+)\\s*
            (\\()\\s*'
        'end': '(?x)\\s*
            (\\))\\s*
            [^\\(\\):]*
            (?:
                (:)\\s*
                (\\S.*(?<!\\s))?
            )?\\s*
            $'
        'beginCaptures': {
          '1':
            'name': 'keyword.other.plantuml'
          '2':
            'name': 'keyword.control.plantuml'
          '3':
            'name': 'keyword.control.plantuml'
          '4':
            'name': 'entity.name.type.plantuml'
          '5':
            'name': 'entity.name.function.plantuml'
          '6':
            'name': 'punctuation.definition.function.args.begin.plantuml'
        }
        'endCaptures': {
          '1':
            'name': 'punctuation.definition.function.args.end.plantuml'
          '2':
            'name': 'keyword.operator.plantuml'
          '3':
            'name': 'entity.name.type.plantuml'
        }
        'name': 'meta.class.method.plantuml'
        'patterns': [
          {
            'include': '#class_function_arguments'
          }
        ]
      }
    ]
  'class_function_arguments':
    'patterns': [
      {
        'match': '(?x)\\s*
            (?:
                ([^\\(\\):,\\s][^\\(\\):,]*)\\s+
            )?
            ([^\\(\\):,\\s]+)\\s*
            (?:
                (:)\\s*
                ([^\\(\\):,\\s][^\\(\\):,]*(?<!\\s))
            )?\\s*,?\\s*
            '
        'captures': {
          '1':
            'name': 'entity.name.type.plantuml'
          '2':
            'name': 'variable.paramater.plantuml'
          '3':
            'name': 'keyword.operator.plantuml'
          '4':
            'name': 'entity.name.type.plantuml'
        'name': 'meta.function.argument.plantuml'
        }
      }
    ]
